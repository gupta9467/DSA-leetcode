/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
       ListNode fast=head;
        ListNode slow=head;
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        
        
        ListNode pre=reverse(slow);
        ListNode curr1=pre;
        ListNode curr2=head;
        int max=0;
        while(curr1!=null)
        {
            max=Math.max(curr1.val+curr2.val,max);
            curr1=curr1.next;
            curr2=curr2.next;
        }
        return max;
    }
    public static ListNode reverse(ListNode head)
    {
            ListNode curr=head;
            ListNode next1=null;
           ListNode prev=null;
           while(curr!=null)
           {
               next1=curr.next;
               curr.next=prev;
               prev=curr;
               curr=next1;
           }
        return prev;
    }
}
